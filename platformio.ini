; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = infoorbs-v0_3
src_dir = firmware/src
lib_dir = firmware/lib
include_dir = firmware/include
# Specify the directory for LittleFS
data_dir = build/littlefs

[common]
; Common settings for all boards
board_build.embed_files = 
	images/logo.jpg

	; *** START WEATHER ICONS ***
	images/weather/light/moonCloudW.jpg
	images/weather/light/sunCloudsW.jpg
	images/weather/light/sunW.jpg
	images/weather/light/moonW.jpg
	images/weather/light/snowW.jpg
	images/weather/light/rainW.jpg
	images/weather/light/cloudsW.jpg
	images/weather/dark/moonCloudB.jpg
	images/weather/dark/sunCloudsB.jpg
	images/weather/dark/sunB.jpg
	images/weather/dark/moonB.jpg
	images/weather/dark/snowB.jpg
	images/weather/dark/rainB.jpg
	images/weather/dark/cloudsB.jpg
	; *** END WEATHER ICONS ***

	; *** START TTF ***
	fonts/RobotoRegular.ttf
	fonts/FinalFrontier.ttf
	; *** END TTF ***

	; *** Start DSEG ***
	; Choose either Classic or Modern here and remember to also adjust include/ttf-fonts.h
	; fonts/DSEG7ClassicBold.ttf
	; fonts/DSEG14ClassicBold.ttf
	fonts/DSEG7ModernBold.ttf
	fonts/DSEG14ModernBold.ttf
	; *** End DSEG ***
board_build.partitions = partitions.csv
board_build.filesystem = littlefs
framework = arduino
lib_deps =
	SPI
	FS
	SPIFFS
	LittleFS
	SD
	arduino-libraries/NTPClient@^3.2.1
	bblanchon/ArduinoJson@^7.0.4
	bblanchon/StreamUtils@^1.9.0
	bodmer/TFT_eSPI@^2.5.43
	bodmer/TJpg_Decoder@^1.1.0
	knolleary/PubSubClient@^2.8
	paulstoffregen/Time@^1.6.1
	tzapu/WiFiManager@^2.0.17
	thijse/ArduinoLog@^1.1.1
monitor_speed = 115200
extra_scripts =
	; Get git branch/commit info
	pre:scripts/generate_git_info.py
	; Embed files into firmware
	pre:scripts/embed_files.py
	; Copy files to littlefs build dir
	pre:scripts/copy_files_to_littlefs.py
	; Automatically upload LittleFS partition
	pre:scripts/upload_littlefs.py
build_flags = 
	-D DISABLE_ALL_LIBRARY_WARNINGS
	-D USER_SETUP_LOADED=1
	-Wfatal-errors
	-I firmware/config
	-I firmware/src/core/button
	-I firmware/src/core/configmanager
	-I firmware/src/core/globaltime
	-I firmware/src/core/i18n
	-I firmware/src/core/screenmanager
	-I firmware/src/core/utils
	-I firmware/src/core/widget
	-I firmware/src/widgets
	-include "firmware/config/config_helper.h"


[env:infoorbs-v0_3]
platform = espressif32
board = esp32doit-devkit-v1
board_build.embed_files = ${common.board_build.embed_files}
board_build.partitions = ${common.board_build.partitions}
board_build.filesystem = ${common.board_build.filesystem}
framework = ${common.framework}
lib_deps = ${common.lib_deps}
monitor_speed = ${common.monitor_speed}
extra_scripts = ${common.extra_scripts}
build_flags = 
    ${common.build_flags}
    -D PCB_VERSION="\"infoorbs-v0_3\""

[env:infoorbs-v0_3x-debug]
platform = espressif32
board = esp32doit-devkit-v1
board_build.embed_files = ${common.board_build.embed_files}
board_build.partitions = partitions-debug.csv
board_build.filesystem = ${common.board_build.filesystem}
framework = ${common.framework}
lib_deps = ${common.lib_deps}
monitor_speed = ${common.monitor_speed}
extra_scripts = ${common.extra_scripts}
build_flags = 
    ${common.build_flags}
    -D PCB_VERSION="\"infoorbs-v0_3x\""
	-D SCREEN_1_CS=0
	-D BUTTON_RIGHT_PIN=5
debug_tool = esp-prog
debug_init_break = tbreak setup
build_type = debug
debug_build_flags = -O0 -g -ggdb
